defaultTasks 'test', 'run'

buildscript {

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {


    }
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "jumpy-duke"
        gdxVersion = '1.10.0'
        roboVMVersion = '2.3.12'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.3'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.1.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }


}

project(":desktop") {
    apply plugin: "java-library"


    dependencies {
        implementation project(":core")


//        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-tools:$gdxVersion"

    }
}

project(":core") {
    apply plugin: "java-library"

    test {

        useJUnitPlatform()

    }

    dependencies {
//        testImplementation(platform('org.junit:junit-bom:5.8.1'))
//        testImplementation('org.junit.jupiter:junit-jupiter')

        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
    }
}

project(":tests") {
    apply plugin: "java"

    sourceSets.test.java.srcDirs = ["src/"]

    test {

        useJUnitPlatform()

    }

    dependencies {

        /**
         * If you do have some classes to test in os specific code you may want to uncomment
         * some of these lines.
         *
         * BUT: I recommend to create seperate test sub projects for each platform. Trust me :)
         *
         */

//        compile project(":android")
//        compile project(":html")
//        compile project(":desktop")
        compile project(path: ':desktop', configuration: 'default')


//        if(System.getProperty("os.name").toLowerCase().indexOf("mac") >= 0) {
//        	compile project(":ios")
//        }

//        compile project(":core")
        compile project(path: ':core', configuration: 'default')

//        compile "junit:junit:4.+"
        compile 'org.junit.vintage:junit-vintage-engine:5.8.2'
        compile "org.mockito:mockito-all:1.10.19"

        compile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"

//        testCompile 'junit:junit:4.+'
        testCompile(platform('org.junit:junit-bom:5.8.1'))
        testCompile('org.junit.jupiter:junit-jupiter')
        testCompile 'org.junit.vintage:junit-vintage-engine:5.8.2'

        testCompile 'org.mockito:mockito-all:1.10.19'




        testCompile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testCompile "com.badlogicgames.gdx:gdx:$gdxVersion"
        testCompile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}





